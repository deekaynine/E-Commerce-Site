{"version":3,"file":"static/js/446.87273a91.chunk.js","mappings":"iPA8CA,EA1CqB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAChBC,EAAyB,IAARD,EAyBvB,OACE,SAAC,IAAD,CACEE,MAAM,UACNC,KAAK,iBACLC,gBAAc,EACdC,iBAAe,EACfC,MAAM,GACNC,YAAW,yBAAoBP,GAC/BQ,OAAQP,EACRQ,WAAW,UACXC,MA/BY,SAACA,GACfC,GAAAA,CAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQP,EACRS,MAAAA,KAGDK,MAAK,SAACC,GACLC,MAAM,sBACNC,QAAQC,IAAI,yBAEbC,OAAM,SAACC,GACNH,QAAQC,IAAI,kBAAmBG,KAAKC,MAAMF,IAC1CJ,MACE,iGAgBJO,UAlCF,iH,6BCLSC,EAAwBC,EAAAA,GAAAA,IAAH,2PAarBC,EAAiBD,EAAAA,GAAAA,IAAH,kHASdE,EAAgBF,EAAAA,GAAAA,KAAH,uGAObG,GAAoBH,EAAAA,EAAAA,IAAOE,EAAPF,CAAH,kHAUjBI,EAAwBJ,EAAAA,GAAAA,IAAH,mECGlC,GAAeK,EAAAA,EAAAA,IAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,WAAY,SAACC,GAAD,OAAUF,GAASC,EAAAA,EAAAA,IAAWC,KAC1CC,QAAS,SAACD,GAAD,OAAUF,GAASG,EAAAA,EAAAA,IAAQD,KACpCE,gBAAiB,SAACF,GAAD,OAAUF,GAASI,EAAAA,EAAAA,IAAgBF,QAGtD,EA3BqB,SAAC,GAAwD,IAAtDG,EAAqD,EAArDA,SAAUJ,EAA2C,EAA3CA,WAAYE,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC7CjC,EAAoCkC,EAApClC,KAAMmC,EAA8BD,EAA9BC,SAAUtC,EAAoBqC,EAApBrC,MAAOuC,EAAaF,EAAbE,SAC/B,OACE,UAACd,EAAD,YACE,SAACE,EAAD,WACE,gBAAKa,IAAKF,EAAUG,IAAI,YAE1B,SAACb,EAAD,UAAgBzB,KAChB,UAAC0B,EAAD,YACE,gBAAKa,QAAS,kBAAMN,EAAgBC,IAApC,qBACA,0BAAOE,KACP,gBAAKG,QAAS,kBAAMP,EAAQE,IAA5B,wBAEF,SAACT,EAAD,UAAgB5B,KAChB,SAAC8B,EAAD,CAAuBY,QAAS,kBAAMT,EAAWI,IAAjD,0B,UC7BOM,EAAwBjB,EAAAA,GAAAA,IAAH,yRAgBrBkB,EAA0BlB,EAAAA,GAAAA,IAAH,oJAQvBmB,EAAuBnB,EAAAA,GAAAA,IAAH,2NAcpBoB,EAAiBpB,EAAAA,GAAAA,IAAH,uFAMdqB,EAAmBrB,EAAAA,GAAAA,IAAH,uGCc7B,EAxCqB,WACnB,IAAMsB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1B,OACE,UAACT,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,yCAEF,SAACA,EAAD,WACE,6CAEF,SAACA,EAAD,WACE,0CAEF,SAACA,EAAD,WACE,uCAEF,SAACA,EAAD,WACE,0CAGHG,EAAUK,KAAI,SAAChB,GAAD,OACb,SAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASiB,QAE9B,SAACR,EAAD,WACE,uCAAeK,QAEjB,mBACA,UAACJ,EAAD,uEAEE,kBAFF,kDAKA,mBACA,SAAC,EAAD,CAAc/C,MAAOmD","sources":["components/stripe-button/stripeButton.jsx","components/checkout-items/CheckoutItemStyles.jsx","components/checkout-items/CheckoutItem.jsx","pages/checkout/checkoutStyles.jsx","pages/checkout/checkout.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nconst StripeButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey =\r\n    \"pk_test_51KM6YxGwVpK4Qm1eQ3TXszmzGO0EMXC5tyamsS9r6QQ4t0QeUde15F9hxa7pRLSiXZpZev0pGS8aVFCn780cO6lL00i43WbLmr\";\r\n\r\n  const onToken = (token) => {\r\n    axios({\r\n      url: \"payment\",\r\n      method: \"post\",\r\n      data: {\r\n        amount: priceForStripe,\r\n        token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        alert(\"Payment successful\");\r\n        console.log(\"payment successful\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Payment error: \", JSON.parse(error));\r\n        alert(\r\n          \"There was an issue with your payment.  Please make Sure you used the provided credentials\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      Label=\"Pay Now\"\r\n      name=\"Clothing Brand\"\r\n      billingAddress\r\n      shippingAddress\r\n      image=\"\"\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteItem,\r\n  addItem,\r\n  removeItemArrow,\r\n} from \"../../redux/cart/cartActions\";\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer,\r\n} from \"./CheckoutItemStyles.jsx\";\r\n\r\nconst CheckoutItem = ({ cartItem, deleteItem, addItem, removeItemArrow }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt=\"item\" />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItemArrow(cartItem)}>&#10094;</div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => deleteItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteItem: (item) => dispatch(deleteItem(item)),\r\n  addItem: (item) => dispatch(addItem(item)),\r\n  removeItemArrow: (item) => dispatch(removeItemArrow(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport StripeButton from \"../../components/stripe-button/stripeButton\";\r\n\r\nimport CheckoutItem from \"../../components/checkout-items/CheckoutItem\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cartSelectors\";\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer,\r\n} from \"./checkoutStyles\";\r\n\r\nconst CheckoutPage = () => {\r\n  const cartItems = useSelector(selectCartItems);\r\n  const total = useSelector(selectCartTotal);\r\n  return (\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quantity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>\r\n      {cartItems.map((cartItem) => (\r\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n      ))}\r\n      <TotalContainer>\r\n        <span>Total: ${total}</span>\r\n      </TotalContainer>\r\n      <br />\r\n      <WarningContainer>\r\n        *PLEASE USE THE FOLLOWING TEST CREDIT CARD FOR PAYMENTS*\r\n        <br />\r\n        4242 4242 4242 4242 - Exp: 01/25 - CVV: 123\r\n      </WarningContainer>\r\n      <br />\r\n      <StripeButton price={total} />\r\n    </CheckoutPageContainer>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["price","priceForStripe","Label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","console","log","catch","error","JSON","parse","stripeKey","CheckoutItemContainer","styled","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","connect","dispatch","deleteItem","item","addItem","removeItemArrow","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","cartItems","useSelector","selectCartItems","total","selectCartTotal","map","id"],"sourceRoot":""}