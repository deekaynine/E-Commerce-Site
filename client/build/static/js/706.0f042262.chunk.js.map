{"version":3,"file":"static/js/706.0f042262.chunk.js","mappings":"0RAEaA,EAA6BC,EAAAA,GAAAA,IAAH,sKAS1BC,EAAiBD,EAAAA,GAAAA,GAAH,4HASdE,EAAmBF,EAAAA,GAAAA,IAAH,0M,SCM7B,EAf0B,SAAC,GAAsB,IAApBG,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClC,OACE,UAACL,EAAD,YACE,SAACE,EAAD,UAAiBE,EAAME,iBACvB,SAACH,EAAD,UACGE,EACEE,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,KAChCC,KAAI,SAACF,GAAD,OACH,SAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKG,aCjBzBC,EAA+BX,EAAAA,GAAAA,IAAH,qE,SCkBnCY,GAAkBC,EAAAA,EAAAA,IAAyB,CAC/CC,YAAaC,EAAAA,KAGf,GAAeC,EAAAA,EAAAA,IAAQJ,EAAvB,EAd4B,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YAC7B,OACE,SAACH,EAAD,UACGG,EAAYL,KAAI,gBAAGC,EAAH,EAAGA,GAAOO,GAAV,mBACf,SAAC,GAAD,UAAgCA,GAARP,WCL1BE,GAAkBC,EAAAA,EAAAA,IAAyB,CAC/CK,UAAWC,EAAAA,KASb,GALqCC,EAAAA,EAAAA,KACnCJ,EAAAA,EAAAA,IAAQJ,GACRS,EAAAA,EAFmCD,CAGnCE","sources":["components/CollectionPreview/CollectionPreviewStyles.jsx","components/CollectionPreview/CollectionPreview.jsx","components/collections-overview/collectionsOverviewStyles.jsx","components/collections-overview/collections-overview.jsx","components/collections-overview/collections-overview.container.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport CollectionItem from \"../collection-item/collectionItem\";\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer,\r\n} from \"./CollectionPreviewStyles.jsx\";\r\n\r\n//getting all collection items from redux global  items array and displaying\r\nconst CollectionPreview = ({ title, items }) => {\r\n  return (\r\n    <CollectionPreviewContainer>\r\n      <TitleContainer>{title.toUpperCase()}</TitleContainer>\r\n      <PreviewContainer>\r\n        {items\r\n          .filter((item, index) => index < 4)\r\n          .map((item) => (\r\n            <CollectionItem key={item.id} item={item} />\r\n          ))}\r\n      </PreviewContainer>\r\n    </CollectionPreviewContainer>\r\n  );\r\n};\r\n\r\nexport default CollectionPreview;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CollectionPreview from \"../CollectionPreview/CollectionPreview\";\r\n\r\nimport { selectCollectionsForPreview } from \"../../redux/shop/shopSelectors.js\";\r\n\r\nimport { CollectionsOverviewContainer } from \"./collectionsOverviewStyles\";\r\n\r\nconst CollectionsOverview = ({ collections }) => {\r\n  return (\r\n    <CollectionsOverviewContainer>\r\n      {collections.map(({ id, ...otherCollectionProps }) => (\r\n        <CollectionPreview key={id} {...otherCollectionProps} />\r\n      ))}\r\n    </CollectionsOverviewContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","//containers usually just pass down props rather than rendering\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { selectIsCollectionFetching } from \"../../redux/shop/shopSelectors\";\r\nimport withSpinner from \"../withSpinner/withSpinner\";\r\nimport collectionsOverview from \"./collections-overview\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching,\r\n});\r\n\r\n//compose make its easier to read/easy to read curried functions\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  withSpinner\r\n)(collectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n"],"names":["CollectionPreviewContainer","styled","TitleContainer","PreviewContainer","title","items","toUpperCase","filter","item","index","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","selectIsCollectionFetching","compose","withSpinner","collectionsOverview"],"sourceRoot":""}