{"version":3,"file":"static/js/387.a7f1328e.chunk.js","mappings":"0LAQMA,GAA+BC,EAAAA,EAAAA,OAAK,kBACxC,yDAEIC,GAA0BD,EAAAA,EAAAA,OAAK,kBACnC,yDA4BF,WAAeE,EAAAA,EAAAA,IAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,sBAAuB,kBAAMD,GAASC,EAAAA,EAAAA,WAGxC,EAzBiB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,sBAKlB,OAJAC,EAAAA,EAAAA,YAAU,WACRD,MACC,CAACA,KAGF,iBAAKE,UAAU,YAAf,WACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,IAAIC,SAAS,SAACX,EAAD,CAA8BY,OAAK,OAC5D,SAAC,KAAD,CACEF,KAAK,iBACLC,SAAS,SAACT,EAAD,CAAyBU,OAAK,YAI7C,SAAC,KAAD","sources":["pages/shop/shop.component.jsx"],"sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { Outlet, Routes, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shopActions\";\r\n\r\nimport Spinner from \"../../components/spinner/spinner\";\r\n\r\nconst CollectionsOverviewContainer = lazy(() =>\r\n  import(\"../../components/collections-overview/collections-overview.container\")\r\n);\r\nconst CollectionPageContainer = lazy(() =>\r\n  import(\"../collection/collection.container\")\r\n);\r\n\r\nconst ShopPage = ({ fetchCollectionsStart }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div className=\"shop-page\">\r\n      <Suspense fallback={<Spinner />}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<CollectionsOverviewContainer props />} />\r\n          <Route\r\n            path=\"/:collectionId\"\r\n            element={<CollectionPageContainer props />}\r\n          />\r\n        </Routes>\r\n      </Suspense>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"],"names":["CollectionsOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","useEffect","className","Suspense","fallback","path","element","props"],"sourceRoot":""}